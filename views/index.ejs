 <!--
 * Project: generic-node-dashboard
 * File: views/index.ejs
 * Author: Emil Nilsson
 * Contact: emil.nilsson@nutanix.com
 -->

 <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <title>Dashboard</title>
  <!-- MDB icon -->
  <link rel="icon" href="img/mdb-favicon.ico" type="image/x-icon">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.11.2/css/all.css">
  <!-- Google Fonts Roboto -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap">
  <!-- Bootstrap core CSS -->
  <link rel="stylesheet" href="css/bootstrap.min.css">
  <!-- Material Design Bootstrap -->
  <link rel="stylesheet" href="css/mdb.min.css">
  <!-- Your custom styles (optional) -->
  <link rel="stylesheet" href="css/style.css">
</head>
<body>

  <!-- NAVBAR -->
  <nav class="navbar navbar-custom">

  </nav>
  <!--------------->

  <div class="container" style="margin-top: 5em;">
    <div class="row">
      <div class="col-6">
        <!-- Card -->
        <div class="card">
          <!-- Card content -->
          <div class="card-body">
            <!-- Title -->
            <h4 class="card-title">Camera One</h4>
          <!-- Card image -->
          <img class="large-image" id="camOne" src="/img/nofeed.png" alt="Card image cap">
          <p>FPS: <span id="fpsOne"></span></p>
          <table id="tableOne">
            
          </table>          
            <!-- Text -->
          </div>
        </div>
        <!-- Card -->
      </div>
      <div class="col-6">
        <!-- Card -->
        <div class="card">
          <!-- Card content -->
          <div class="card-body">
            <!-- Title -->
            <h4 class="card-title">Camera Two</h4>
          <!-- Card image -->
          <img class="large-image" id="camTwo" src="/img/nofeed.png" alt="Card image cap">
          <p>FPS: <span id="fpsTwo"></span></p>
          <table id="tableTwo">
            
          </table>
            <!-- Text -->
          </div>
        </div>
        <!-- Card -->
      </div>
    </div>
  </div>


  <!-- Footer -->
<footer class="page-footer font-small fixed-bottom navbar-custom">

</footer>
<!-- Footer -->

  <!-- jQuery -->
  <script type="text/javascript" src="js/jquery.min.js"></script>
  <!-- Bootstrap tooltips -->
  <script type="text/javascript" src="js/popper.min.js"></script>
  <!-- Bootstrap core JavaScript -->
  <script type="text/javascript" src="js/bootstrap.min.js"></script>
  <!-- MDB core JavaScript -->
  <script type="text/javascript" src="js/mdb.min.js"></script>
  <!-- Your custom scripts (optional) -->
  <script src="/socket.io/socket.io.js"></script>
  <script>

    var socket = io.connect(window.location.origin);
    var fpsOne = 0;
    var fpsTwo = 0;
    var lastLeftData = '';
    var lastRightData = '';
    socket.on('left_frame', function (data) {
        try {
          $("#camOne").attr('src',"data:image/png;base64," + data);
          fpsOne++; 
        }
        catch(err){
          console.log(err);
        }
      });
    setInterval(()=>{
      $("#fpsOne").text(fpsOne);
      fpsOne = 0;
    },1000)

    socket.on('left_data', function(data){
      try {
        if(data.length > 1){
          var payload = JSON.parse(data);
          var tempTxt = " ";
          if(lastLeftData !== payload){
            for (x in payload) {
                tempTxt += "<tr><td>" + x + "</td><td>"+ payload[x] +"</td></tr>";
            }
          $("#tableOne").html(tempTxt);
          lastLeftData = payload;
        }  
      }        
      } catch (error) {
        console.log("Bad JSON in left json_payload")
      }
    });

    socket.on('right_frame', function (data) {
        try {
          $("#camTwo").attr('src',"data:image/png;base64," + data);
          fpsTwo++; 
        }
        catch(err){
          console.log(err);
        }
      });
    setInterval(()=>{
      $("#fpsTwo").text(fpsTwo);
      fpsTwo = 0;
    },1000)

    socket.on('right_data', function(data){
      try {
        if(data.length > 1){
          var payload = JSON.parse(data);
          var tempTxt = " ";
          if(lastRightData !== payload){
            for (x in payload) {
                tempTxt += "<tr><td>" + x + "</td><td>"+ payload[x] +"</td></tr>";
            }
          $("#tableTwo").html(tempTxt);
          lastRightData = payload;
        }
      }        
      } catch (error) {
        console.log("Bad JSON in right json_payload")
      }
    });  
  </script>
</body>
</html>
