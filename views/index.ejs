 <!--
 * Project: generic-node-dashboard
 * File: views/index.ejs
 * Author: Emil Nilsson
 * Contact: emil.nilsson@nutanix.com
 -->

 <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <title>Dashboard</title>
  <!-- MDB icon -->
  <link rel="icon" href="img/mdb-favicon.ico" type="image/x-icon">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.11.2/css/all.css">
  <!-- Google Fonts Roboto -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap">
  <!-- Bootstrap core CSS -->
  <link rel="stylesheet" href="css/bootstrap.min.css">
  <!-- Material Design Bootstrap -->
  <link rel="stylesheet" href="css/mdb.min.css">
  <!-- Your custom styles (optional) -->
  <link rel="stylesheet" href="css/style.css">
</head>
<body>

  <!-- NAVBAR -->
  <nav class="navbar navbar-custom">

  </nav>
  <!--------------->

  <div class="container" style="margin-top: 5em;">
    <div class="row">
      <div class="col-6">
        <!-- Card -->
        <div class="card">
          <!-- Card content -->
          <div class="card-body">
            <!-- Title -->
            <h4 class="card-title">Camera</h4>
          <!-- Card image -->
          <img class="large-image" id="camOne" src="/img/nofeed.png" alt="Card image cap">       
            <!-- Text -->
          </div>
        </div>
        <!-- Card -->
      </div>
      <div class="col-6">
        <!-- Card -->
        <div class="card">
          <!-- Card content -->
          <div class="card-body" style="min-height: 300px;">
            <!-- Title -->
            <h4 class="card-title">Shopping cart</h4>
          <!-- Card image -->
          <table id="tableTwo">
            
          </table>
 
            <!-- Text -->
          </div>
          <div class="card-footer text-muted text-center mt-4">
            <table id="totalTable">


            </table>
          </div>          
        </div>
        <!-- Card -->
      </div>
    </div>
  </div>


  <!-- Footer -->
<footer class="page-footer font-small fixed-bottom navbar-custom">

</footer>
<!-- Footer -->

  <!-- jQuery -->
  <script type="text/javascript" src="js/jquery.min.js"></script>
  <!-- Bootstrap tooltips -->
  <script type="text/javascript" src="js/popper.min.js"></script>
  <!-- Bootstrap core JavaScript -->
  <script type="text/javascript" src="js/bootstrap.min.js"></script>
  <!-- MDB core JavaScript -->
  <script type="text/javascript" src="js/mdb.min.js"></script>
  <!-- Your custom scripts (optional) -->
  <script src="/socket.io/socket.io.js"></script>
  <script>

    var socket = io.connect(window.location.origin); //Connect the socker.io session, fetch the URL from the URL bar.
    var lastData = '';
    socket.on('frame', function (data) {
        try {
          $("#camOne").attr('src',"data:image/png;base64," + data); //Update attribute for the IMG tag.
        }
        catch(err){
          console.log(err);
        }
      });    

    //Wait for incoming data
    socket.on('data', function (data) {
      try {
        if(data.length > 1){
          var payload = JSON.parse(data);
          var tempTxt = " ";
          if(lastData !== payload){
            var price = {
              "banana" : 1.23,
              "orange" : 2.32,
              "apple" : 0.32
                        }
            var cart = {items : [], total: 0.00}
            var numOfItems = 0;
            for(x in payload.detections){
              if(String(payload.detections[x]) in price){ //Check to see that we have a price for the detected object, if not, skip.
                if(numOfItems < 2){ //Limited to just show two items
                  cart.items.push({label : payload.detections[x], price : price[payload.detections[x]]})
                  cart.total += price[payload.detections[x]];
                  numOfItems++;
                }
              }
            }
            for (item in cart.items) {
                tempTxt += "<tr class='itemRow'><th class='itemLabel'>" + String(cart.items[item].label).replace(/^./, cart.items[item].label[0].toUpperCase()) + "</th><td class='itemPrice'>$"+ cart.items[item].price +"</td></tr>";
            }
            $("#totalTable").html("<tr><th class='totalText'>Total:</th><td class='totalPrice'>$" + Number(cart.total).toFixed(2) + "</td></tr>");
          $("#tableTwo").html(tempTxt);
          lastData = payload;
        }  
      }        
      } catch (error) {
        console.log("Bad JSON in left json_payload" + error)
      }
    });

  </script>
</body>
</html>
